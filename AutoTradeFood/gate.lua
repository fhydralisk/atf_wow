---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hydra.
--- DateTime: 2020-01-05 13:43
---
local addonName, L = ...

local gate_request_timeout = L.gate_request_timeout
local min_mana = L.min_mana
local interact_key = L.hotkeys.interact_key

L.gate = {}
L.gate.gating_context = {
  spell = "",
  requester = "",
  cooldown_ts = 0,
  city = "",
}
L.gate.gating_contexts = {}


function L.F.say_gate_help(to_player)
  L.F.whisper_or_say("4步便捷开门！请花1分钟仔细阅读，简单高效无需求人开门即可达成！", to_player)
  L.F.whisper_or_say("1. 在【隔壁】材料NPC处购买【传送门符文】1枚。", to_player)
  L.F.whisper_or_say("2. 【先】M{player}主城的名字，“暴风城”、“铁炉堡”或“达纳苏斯”，M语后{player}将自动邀请您进组。", to_player)
  L.F.whisper_or_say("3. 【然后】将石头主动交易给{player}：【传送门符文】【1枚】", to_player)
  L.F.whisper_or_say("4. 【交易成功后】，{player}将在短时间内施放传送门法术。", to_player)
  L.F.whisper_or_say("注. 如果交易成功后10秒内未能施放传送门，请您试上述步骤，并邮件与{player}联系索赔，感谢！", to_player)
  L.F.whisper_or_say("请您使用传送门后自行离队，祝您旅途愉快！", to_player)
end


local function parse_and_set_city(msg)
  local spell, city
  if msg:find("暴风城") then
    spell = "传送门：暴风城"
    city = "暴风城"
  elseif msg:find("苏斯") and msg:find("希利") == nil then  -- 广东话友好，
    spell = "传送门：达纳苏斯"
    city = "达纳苏斯"
  elseif msg:find("铁炉堡") then
    spell = "传送门：铁炉堡"
    city = "铁炉堡"
  else
    print("这里不应该到达")
    return nil, nil
  end
  return spell, city
end


local function invalidate_requests(winner, city)
  for player, _ in pairs(L.gate.gating_contexts) do
    L.F.whisper_or_say(winner..
            "抢先一步交易了{player}【传送门符文】，您的请求已取消。{player}将为其施放通往"..city.."的传送门，如若顺路，请M{player}【水水水】进组", player
    )
  end
  L.gate.gating_contexts = {}
end


local function transit_to_gate_state(player)
  L.gate.gating_contexts[player] = nil
  invalidate_requests(player, L.gate.gating_context.city)
  L.next_state = 3
  L.gate.gating_context.cooldown_ts = GetTime() + 60
  if not UnitInParty(player) then L.F.invite_player(player) end
end


function L.F.gate_cooldown()
  if GetTime() < L.gate.gating_context.cooldown_ts then
    return math.modf( L.gate.gating_context.cooldown_ts - GetTime())
  else
    return 0
  end
end


function L.F.gate_request(player, msg)
  if not (L.F.watch_dog_ok()) then
    L.F.whisper_or_say(
        "米豪的驱动程序出现故障，开门服务暂时失效，请等待米豪的维修师进行修复。十分抱歉！", player)
    return
  end

  local cooldown_last = L.F.gate_cooldown()
  if cooldown_last > 0 then
    L.F.whisper_or_say("传送门法术正在冷却，请"..cooldown_last.."秒后重新请求", player)
    return
  end
  local spell, city = parse_and_set_city(msg)
  if not spell then
    return
  end
  if GateWhiteList[player] then
    if GetItemCount(L.items.stone_name) > 0 then
      L.gate.gating_context.spell = spell
      L.gate.gating_context.city = city
      L.gate.gating_context.requester = player
      transit_to_gate_state(player)
      L.F.whisper_or_say("贵宾驾到，马上起航！", player)
      return
    else
      L.F.whisper_or_say("贵宾您好，{player}已无油，请交易{player}施法材料【传送门符文】【1枚】来为{player}补充油料", player)
    end
  end

  L.gate.gating_contexts[player] = {
    request_ts = GetTime(),
    city = city,
    spell = spell,
  }
  L.F.whisper_or_say(
    city.."传送门指定成功，请接受组队邀请，并于"..gate_request_timeout..
        "秒内交易{player}【1】枚【传送门符文】。隔壁施法材料商20Y出售该材料，烦请移步！", player
  )
  L.F.invite_player(player)
end


function L.F.drive_gate()
  for player, gc in pairs(L.gate.gating_contexts) do
    if GetTime() - gc.request_ts > gate_request_timeout then
      L.F.whisper_or_say("传送门未能成功开启，未收到符文石", player)
      L.gate.gating_contexts[player] = nil
    end
  end
end


function L.F.bind_gate()
  if UnitPower("player") < min_mana then
    SetBindingItem(interact_key, L.F.get_food_name_level().water.name)
  else
    SetBindingSpell(interact_key, L.gate.gating_context.spell)
  end
end


local function should_trade_stone(trade)
  if L.gate.gating_contexts[trade.npc_name] then
    if UnitInParty(trade.npc_name) then
      return true, false
    else
      L.F.whisper_or_say("您需要进组后，方能交易{player}传送门符文。请M{player}【"..L.cmds.invite_cmd.."】进组。如果未能成功，请您多次尝试。", trade.npc_name)
      return true, true
    end
  end
  return false, false
end


local function maybe_feed_some(trade)
  if  L.F.get_free_slots() < 6 then
    L.F.feed(L.F.get_food_name_level().food.name, 1)
  end
end


local function statistics_gate(trade)
  local key_trade_all = "trade.gate.count."..date("%x")
  L.F.merge_statistics_plus_int(key_trade_all, 1)
end



local function on_trade_complete(trade)
  local npc_name = trade.npc_name
  local city = L.gate.gating_contexts[npc_name]["city"]
  local spell = L.gate.gating_contexts[npc_name]["spell"]
  L.F.whisper_or_say(
          "符文石交易成功。稍等几秒将为您开门...若未邀请成功，请M{player}【"..L.cmds.invite_cmd.."】进组", npc_name)
  L.gate.gating_context["spell"] = spell
  L.gate.gating_context["city"] = city
  L.gate.gating_context["requester"] = npc_name
  transit_to_gate_state(npc_name)
  L.F.whisper_or_say(npc_name.."，"..city.."传送程序已载入，请坐稳扶好！想搭便车的朋友，M{player}【水水水】进组")
  statistics_gate()
end


local function should_accept_trade(trade)
  local items = trade.items.target.items
  local cnt = trade.items.target.count
  local npc_name = trade.npc_name

  if cnt == 0 then
    L.F.whisper_or_say(npc_name.."，需要交易我1枚【传送门符文】才能够施法哦！", npc_name)
    return false
  end
  if L.gate.gating_contexts[npc_name] == nil then
    -- already canceled.
    L.F.whisper_or_say(npc_name.."，由于"..gate_request_timeout.."秒已过，交易已取消，请重新M{player}主城名字。", npc_name)
    return false
  end
  if items[L.items.stone_name] == 1 and cnt == 1 then
    return true
  end
  if items["Gold"] and items["Gold"] > 0 then
    L.F.whisper_or_say(npc_name.."，开门服务只收【传送门符文】，不收金币，详情烦请M我【传送门】，仅需1分钟，轻松开门！", npc_name)
  elseif items[L.items.stone_name] and items[L.items.stone_name] > 1 then
    L.F.whisper_or_say(npc_name.."，请交易我【1枚】传送门符文，多余的请您保留以备后用，谢谢！", npc_name)
  elseif items[L.items.stone_name_incorrect] then
    L.F.whisper_or_say(npc_name.."，您交易的材料有误，材料名字是【传送“门”符文】而非【传送符文】，请您重新购买哦。", npc_name)
  else
    L.F.whisper_or_say(npc_name.."，请勿交易我额外的物品，谢谢！", npc_name)
  end
  return false
end


L.trade_hooks.trade_stone = {
  ["should_hook"] = should_trade_stone,
  ["feed_items"] = maybe_feed_some,
  ["on_trade_complete"] = on_trade_complete,
  ["on_trade_cancel"] = nil,
  ["on_trade_error"] = nil,
  ["should_accept"] = should_accept_trade,
  ["check_target_item"] = nil,
}
